<svg xmlns='http://www.w3.org/2000/svg' width='78' height='78' fill='none' xmlns:v='https://vecta.io/nano'><g clip-path='url(#C)'><path d='M47.176 65c0 7.18-5.821 13-13 13s-13-5.82-13-13 5.82-13 13-13 13 5.821 13 13z' fill='#ffba08'/><path opacity='.3' d='M47.176 65c0 7.18-5.821 13-13 13s-13-5.82-13-13 5.82-13 13-13 13 5.821 13 13z' fill='#ef4444'/><path d='M56.952 38.744C45.934 37.17 37.426 27.697 37.426 16.25a22.6 22.6 0 0 1 1.927-9.133c-1.664-.39-3.393-.617-5.177-.617-12.545 0-22.75 10.205-22.75 22.75v9.061a21.79 21.79 0 0 1-7.761 16.682c-1.264 1.079-1.989 2.655-1.989 4.319 0 3.137 2.551 5.688 5.687 5.688h53.625c3.137 0 5.688-2.551 5.688-5.688 0-1.664-.725-3.24-2.022-4.348a21.76 21.76 0 0 1-7.703-16.22z' fill='url(#A)'/><path d='M76.426 16.25c0 8.975-7.276 16.25-16.25 16.25s-16.25-7.275-16.25-16.25S51.201 0 60.176 0s16.25 7.276 16.25 16.25z' fill='url(#B)'/></g><defs><linearGradient id='A' x1='-2.5' y1='54.001' x2='59.5' y2='19.001' gradientUnits='userSpaceOnUse'><stop stop-color='#ffba08'/><stop offset='1' stop-color='#ffdb7e'/></linearGradient><linearGradient id='B' x1='42.5' y1='37.5' x2='60' y2='-1.5' gradientUnits='userSpaceOnUse'><stop stop-color='#7a1cd0'/><stop offset='1' stop-color='#6366f1'/></linearGradient><clipPath id='C'><path fill='#fff' d='M0 0h78v78H0z'/></clipPath></defs><!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</svg>